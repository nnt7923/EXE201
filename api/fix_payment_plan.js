const mongoose = require('mongoose');
const Payment = require('./models/Payment');
const User = require('./models/User');
const SubscriptionPlan = require('./models/SubscriptionPlan');
require('dotenv').config();

async function fixPaymentPlan() {
  try {
    // K·∫øt n·ªëi MongoDB
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng');

    // T√¨m user v√† payment
    const user = await User.findOne({ email: 'ngoquocan712@gmail.com' });
    const payment = await Payment.findOne({ user: user._id });
    
    console.log(`üìã Payment hi·ªán t·∫°i:`);
    console.log(`   - Payment ID: ${payment._id}`);
    console.log(`   - Amount: ${payment.amount}`);
    console.log(`   - Invalid Plan ID: ${payment.subscriptionPlan}`);
    
    // T√¨m plan ph√π h·ª£p d·ª±a tr√™n amount (29000 = C∆° b·∫£n)
    const correctPlan = await SubscriptionPlan.findOne({ price: payment.amount });
    
    if (!correctPlan) {
      console.log('‚ùå Kh√¥ng t√¨m th·∫•y plan ph√π h·ª£p v·ªõi amount');
      return;
    }
    
    console.log(`\n‚úÖ T√¨m th·∫•y plan ph√π h·ª£p:`);
    console.log(`   - Plan ID: ${correctPlan._id}`);
    console.log(`   - Name: ${correctPlan.name}`);
    console.log(`   - Price: ${correctPlan.price}`);
    
    // C·∫≠p nh·∫≠t payment record
    payment.subscriptionPlan = correctPlan._id;
    await payment.save();
    
    console.log(`\n‚úÖ ƒê√£ c·∫≠p nh·∫≠t payment record v·ªõi plan ID ƒë√∫ng`);
    
    // Verify update
    const updatedPayment = await Payment.findById(payment._id)
      .populate('user', 'name email')
      .populate('subscriptionPlan', 'name price durationInDays');
      
    console.log(`\nüìã Payment sau khi c·∫≠p nh·∫≠t:`);
    console.log(`   - Payment ID: ${updatedPayment._id}`);
    console.log(`   - User: ${updatedPayment.user.name} (${updatedPayment.user.email})`);
    console.log(`   - Plan: ${updatedPayment.subscriptionPlan.name}`);
    console.log(`   - Plan Price: ${updatedPayment.subscriptionPlan.price}`);
    console.log(`   - Amount: ${updatedPayment.amount}`);
    console.log(`   - Status: ${updatedPayment.status}`);
    
  } catch (error) {
    console.error('‚ùå L·ªói:', error.message);
  } finally {
    await mongoose.disconnect();
    console.log('\n‚úÖ ƒê√£ ng·∫Øt k·∫øt n·ªëi MongoDB');
  }
}

fixPaymentPlan();